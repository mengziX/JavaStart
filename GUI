1.2Java提供了三个主要包做GUI开发：
java.awt 包 – 主要提供字体/布局管理器
javax.swing 包[商业开发常用] – 主要提供各种组件(窗口/按钮/文本框)
java.awt.event 包 – 事件处理，后台功能的实现。

1）顶层容器:：常用有JFrame，JDialog
（2）中间容器：JPanel，JOptionPane，JScrollPane，JLayeredPane 等，主要以panel结尾。
（3）基本组件：JLabel，JButton，JTextField，JPasswordField，JRadioButton 等。


顶层容器介绍
#  组件    描述
1  JFrame  一个普通的窗口（绝大多数 Swing 图形界面程序使用 JFrame 作为顶层容器）
2  JDialog 对话框

中间容器
#  组件               描述
1  JPanel(相当于div)  一般轻量级面板容器组件(作为JFrame中间容器)
2  JScrollPane        带滚动条的，可以水平和垂直滚动的面板组件
3  JSplitPane         分隔面板
4  JTabbedPane        选项卡面板
5  JLayeredPane       层级面板

基本组件
#  组件               描述
1  JLabel             标签
2  JButton            按钮
3  JRadioButton       单选按钮
4  JCheckBox          复选框
5  JToggleButton      开关按钮
6  JTextField         密码框
7  JPasswordField     文本框
8  JTextArea          文本区域
9  JComboBox          下拉列表框
10 Jlist              列表
11 JProgressBar       进度条
12 JSlider            滑块


API介绍
Jframe组件
      JFrame frame = new JFrame("HelloWorldSwing");// 创建及设置窗口
      frame.setDefaultLookAndFeelDecorated(true);			 // 确保一个漂亮的外观风格
			frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);			设置默认的关闭窗口
			frame.pack();			   // 显示窗口
			frame.setVisible(true);			//这个最好放在最后，不然会出现视图看不到的情况
			frame.setBounds(600, 300, 500, 400);			设置窗口的x,y位置，窗口大小x,y.
			frame.add(panel)			添加panel面板到容器
			frmIpa.getContentPane().add(panel, BorderLayout.NORTH);			添加面板到主窗口，布局在北面
			frmIpa.getContentPane().add(scrollPane, BorderLayout.CENTER);			添加可滚动面板到主窗口，布局在中间

Panel组件
JPanel panel = new JPanel();    创建面板容器
panel.add(button);              添加按钮到面板
JOptionPane
		JOptionPane.showMessageDialog(panel3, "没有选中任何文件", "提示", JOptionPane.WARNING_MESSAGE); 			弹出提示框到panel容器
JScrollPane
		JScrollPane scrollPane = new JScrollPane();			创建可滚动面板
		scrollPane.setViewportView(textArea);			设置面板内容
    
    
    
一个用户登录框实例
SwingLoginExample.java 文件代码如下：
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField; 
public class SwingLoginExample {
    public static void main(String[] args) {    
        // 创建 JFrame 实例
        JFrame frame = new JFrame("Login Example");
        // Setting the width and height of frame
        frame.setSize(350, 200);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        /* 创建面板，这个类似于 HTML 的 div 标签
         * 我们可以创建多个面板并在 JFrame 中指定位置
         * 面板中我们可以添加文本字段，按钮及其他组件。
         */
        JPanel panel = new JPanel();    
        // 添加面板
        frame.add(panel);
        /* 
         * 调用用户定义的方法并添加组件到面板
         */
        placeComponents(panel);
        // 设置界面可见
        frame.setVisible(true);
    }
    private static void placeComponents(JPanel panel) {
        /* 布局部分我们这边不多做介绍
         * 这边设置布局为 null
         */
        panel.setLayout(null);
        // 创建 JLabel
        JLabel userLabel = new JLabel("User:");
        /* 这个方法定义了组件的位置。
         * setBounds(x, y, width, height)
         * x 和 y 指定左上角的新位置，由 width 和 height 指定新的大小。
         */
        userLabel.setBounds(10,20,80,25);
        panel.add(userLabel);
        /* 
         * 创建文本域用于用户输入
         */
        JTextField userText = new JTextField(20);
        userText.setBounds(100,20,165,25);
        panel.add(userText);
        // 输入密码的文本域
        JLabel passwordLabel = new JLabel("Password:");
        passwordLabel.setBounds(10,50,80,25);
        panel.add(passwordLabel);
        /* 
         *这个类似用于输入的文本域
         * 但是输入的信息会以点号代替，用于包含密码的安全性
         */
        JPasswordField passwordText = new JPasswordField(20);
        passwordText.setBounds(100,50,165,25);
        panel.add(passwordText);
        // 创建登录按钮
        JButton loginButton = new JButton("login");
        loginButton.setBounds(10, 80, 80, 25);
        panel.add(loginButton);
    }
}
